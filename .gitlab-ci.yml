# Node docker image on which this would be run
image: node:latest

stages:
  - test
  - production

# Job 1:
backend_test:
  stage: test
  before_script:
    - apt-get update
    - apt-get install -yq gconf-service libasound2 libatk1.0-0 libc6 libcairo2
      libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4
      libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0
      libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1
      libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1
      libxss1 libxtst6 ca-certificates fonts-liberation libnss3 lsb-release
      xdg-utils wget
  script:
    - cd ./backend
    - npm install
    # - npm run test // TODO: test

frontend_test:
  stage: test
  script:
    - cd ./frontend-user
    - npm install
    # - npm run test // TODO: test

# Job 2:
# Deploy to staging
backend_deploy:
  stage: production
  image: ruby:latest
  only:
    - master
    - anyan_adminSubService
    - yc/search
  script:
    - cd ./backend
    - apt-get update -qy
    - apt-get install -y ruby-dev
    - gem install dpl
    - dpl --provider=heroku --app=$HEROKU_APP_NAME_BACK --api-key=$HEROKU_KEY_YC

frontend_deploy:
  stage: production
  only:
    - master
    - anyan_adminSubService
  tags:
    - webpack-vue-cicd
  script:
    - cd ./frontend-user
    - apt-get update -qy
    - apt-get install -y ruby-dev git
    - gem install dpl
    - dpl --provider=heroku --app=$HEROKU_APP_NAME_FRONT --api-key=$HEROKU_KEY_YC  --skip-cleanup

  